module.exports = function(sequelize, DataTypes) {

  return sequelize.define('Application', {
      application_id: {
            type: DataTypes.INTEGER,
            allowNull: false,
            primaryKey: true,
            autoIncrement: true,
            _autoGenerated: true
        },
        user_id: {
          type: DataTypes.INTEGER,
            allowNull: true
        },
        unique_app_id: {
            type: DataTypes.STRING
        },
        submitted: {
            type: DataTypes.STRING,
            allowNull: true,
            defaultValue: 'draft'
        },
        serviceType: {
            type: DataTypes.STRING,
            allowNull: false,
            validate: {
                notContains: {
                    args: 'not ok',
                    msg: JSON.stringify([{
                        "questionId" : 'service_type_selector',  // ID of the question container, taken from your HTML
                        "errInfo": 'A service type has not been chosen',  // Detail of hte error, i.e. what the error is
                        "errSoltn": 'Please select a service type to use and click Continue'  // Detail of how to solve error, i.e. how to fix and move to next page
                    }])
                }
            }
        },
        feedback_consent: {
            type: DataTypes.BOOLEAN,
            allowNull: false,
            validate: {
                notEmpty: {
                    msg: JSON.stringify([{
                        "questionId" : 'feedback_consent',  // ID of the question container, taken from your HTML
                        "errInfo": 'You must confirm giving feedback consent',  // Detail of hte error, i.e. what the error is
                        "errSoltn": 'Tell us whether we can contact you for feedback'  // Detail of how to solve error, i.e. how to fix and move to next page
                    }])
                }
            }
        },
        all_info_correct: {
           type: DataTypes.VIRTUAL,
            allowNull: false,
            validate: {
                notEmpty: {
                    msg: JSON.stringify([{
                        "questionId" : 'all_info_correct',  // ID of the question container, taken from your HTML
                        "errInfo": 'You have not confirmed that all the information you have provided is correct',  // Detail of hte error, i.e. what the error is
                        "errSoltn": 'Confirm that the information you\'ve given is correct and that you agree to the terms'  // Detail of how to solve error, i.e. how to fix and move to next page
                    }])
                },
                notContains: {
                    args: 'not ok',
                    msg: JSON.stringify([{
                        "questionId": 'all_info_correct',  // ID of the question container, taken from your HTML
                        "errInfo": 'You haven\'t confirmed that all the information youâ€™ve given us is correct',  // Detail of hte error, i.e. what the error is
                        "errSoltn": 'Confirm that the information you\'ve given is correct and that you agree to the terms'  // Detail of how to solve error, i.e. how to fix and move to next page
                    }])
                }
            }
        },
        application_reference: {
            type: DataTypes.STRING,
            allowNull: true
        },
        case_reference: {
            type: DataTypes.STRING,
            allowNull: true
        },
        application_guid: {
          type: DataTypes.STRING
        },
        application_start_date: {
            type: DataTypes.TIME,
            allowNull: true
        },
        company_name: {
            type: DataTypes.STRING,
            allowNull: true
        }
    })
};

